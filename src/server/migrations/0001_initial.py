# Generated by Django 2.0.4 on 2018-05-23 19:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import server.managers.udvUserManager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('occupation', models.CharField(blank=True, max_length=50)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('is_moderator', models.BooleanField(default=False)),
                ('is_super_moderator', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'udv_user',
            },
            managers=[
                ('objects', server.managers.udvUserManager.UdvUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.IntegerField(choices=[(1, 'Add'), (2, 'Delete'), (3, 'Change')], default=1)),
                ('old_version', models.TextField(null=True)),
                ('new_version', models.TextField(null=True)),
                ('status', models.IntegerField(choices=[(1, 'Approved'), (2, 'New'), (3, 'Changes required'), (4, 'Updated')], default=2)),
            ],
            options={
                'db_table': 'action',
            },
        ),
        migrations.CreateModel(
            name='AlternativeOpinion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'alternative_opinion',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
                ('status', models.IntegerField(choices=[(1, 'Approved'), (2, 'New'), (3, 'Changes required')], default=2)),
                ('creator', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='articles_creator', to=settings.AUTH_USER_MODEL)),
                ('moderator', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='articles_moderator', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='server.Article')),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='ArticlePersonLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Article')),
            ],
            options={
                'db_table': 'article_person_link',
            },
        ),
        migrations.CreateModel(
            name='ArticlePhotoLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Article')),
            ],
            options={
                'db_table': 'article_Photo_link',
            },
        ),
        migrations.CreateModel(
            name='ArticleTermLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Article')),
            ],
            options={
                'db_table': 'article_term_link',
            },
        ),
        migrations.CreateModel(
            name='BlockOfText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('number', models.IntegerField()),
                ('is_main', models.BooleanField(default=True)),
                ('alternative_opinion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='server.AlternativeOpinion')),
            ],
            options={
                'db_table': 'block_of_text',
            },
        ),
        migrations.CreateModel(
            name='Paragraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitle', models.CharField(max_length=50)),
                ('number', models.IntegerField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paragraphs', to='server.Article')),
            ],
            options={
                'db_table': 'paragraph',
            },
        ),
        migrations.CreateModel(
            name='PersonBriefInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('date_of_death', models.DateField()),
                ('brief_info', models.TextField()),
                ('full_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Article')),
            ],
            options={
                'db_table': 'person_brief_info',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField()),
            ],
            options={
                'db_table': 'photo',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char_number', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('author', models.CharField(max_length=50)),
                ('link', models.TextField()),
                ('date_upload', models.DateField()),
                ('source_type', models.IntegerField(choices=[(1, 'Web'), (2, 'TextBook')], default=1)),
            ],
            options={
                'db_table': 'source',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Article')),
                ('user_subscribed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'subscription',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('definition', models.TextField()),
            ],
            options={
                'db_table': 'term',
            },
        ),
        migrations.AddField(
            model_name='blockoftext',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Source'),
        ),
        migrations.AddField(
            model_name='articletermlink',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Term'),
        ),
        migrations.AddField(
            model_name='articlephotolink',
            name='photo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Photo'),
        ),
        migrations.AddField(
            model_name='articlepersonlink',
            name='person_brief',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.PersonBriefInfo'),
        ),
        migrations.AddField(
            model_name='article',
            name='persons',
            field=models.ManyToManyField(blank=True, related_name='articles', to='server.PersonBriefInfo'),
        ),
        migrations.AddField(
            model_name='article',
            name='photos',
            field=models.ManyToManyField(blank=True, to='server.Photo'),
        ),
        migrations.AddField(
            model_name='article',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='articles', to='server.Subscription'),
        ),
        migrations.AddField(
            model_name='article',
            name='terms',
            field=models.ManyToManyField(blank=True, to='server.Term'),
        ),
        migrations.AddField(
            model_name='alternativeopinion',
            name='paragraph',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='opinions', to='server.Paragraph'),
        ),
        migrations.AddField(
            model_name='action',
            name='block_of_text',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.BlockOfText'),
        ),
        migrations.AddField(
            model_name='action',
            name='changer',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='changer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='action',
            name='moderator_checker',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='moderator_checker', to=settings.AUTH_USER_MODEL),
        ),
    ]
